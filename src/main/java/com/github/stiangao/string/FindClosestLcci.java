package com.github.stiangao.string;

public class FindClosestLcci {

    public static void main(String[] args) {
        String[] words = new String[]{"mm", "l", "tul", "nd", "up", "ugu", "sgn", "bly", "o", "psn", "dn", "jw", "uo", "ry", "z", "kyb", "en", "a", "aem", "vcy", "y", "z", "wuu", "ver", "l", "wi", "jh", "nfu", "quq", "wa", "zy", "lyu", "vny", "v", "k", "p", "k", "buu", "w", "b", "jl", "mwv", "v", "til", "mv", "mv", "m", "uar", "dbo", "ae", "hyx", "rxy", "p", "an", "bz", "jcv", "t", "rac", "amw", "qhs", "ed", "b", "rw", "pu", "sr", "u", "a", "go", "pdm", "yzl", "mkw", "ai", "u", "s", "rsg", "uu", "fr", "g", "l", "is", "kok", "xnh", "zv", "dcf", "u", "x", "tq", "f", "r", "ekv", "jvm", "krk", "cd", "ks", "dv", "z", "qw", "m", "pe", "l", "etk", "t", "xuq", "t", "ntc", "h", "s", "iat", "xe", "s", "l", "bq", "eg", "mw", "hy", "ol", "szb", "f", "vi", "rok", "ks", "v", "va", "klf", "yg", "t", "vuo", "wt", "x", "wbs", "gl", "uhj", "gkv", "m", "d", "yo", "tah", "ja", "qe", "q", "a", "d", "hc", "zbh", "mnr", "chf", "sbp", "v", "wd", "q", "sj", "khu", "hsx", "i", "i", "q", "uzy", "can", "qq", "nlp", "io", "kp", "d", "p", "cxt", "zdj", "rxr", "w", "eye", "ukn", "bf", "x", "v", "uvy", "xd", "f", "vb", "y", "wjh", "n", "ns", "qev", "i", "xl", "ywg", "v", "gi", "sbh", "dq", "do", "fqu", "ee", "ru", "nxh", "as", "jvc", "n", "h", "yvd", "ke", "jx", "e", "a", "kou", "d", "ky", "pue", "yto", "i", "ik", "px", "h", "tem", "msp", "dyc", "abx", "wwt", "e", "r", "o", "p", "ds", "x", "pe", "j", "tu", "k", "k", "nt", "e", "vpn", "ml", "otp", "j", "xtg", "hkn", "jey", "h", "wg", "wni", "g", "meo", "g", "y", "o", "p", "zc", "h", "r", "c", "r", "ixc", "mvg", "x", "mb", "zm", "hex", "w", "r", "u", "ai", "f", "mkh", "um", "c", "e", "gun", "ph", "r", "nmf", "p", "qw", "s", "hmy", "in", "my", "y", "g", "p", "jl", "v", "ldr", "js", "px", "t", "c", "fm", "d", "zdi", "tv", "oeh", "cqz", "ol", "sou", "s", "ht", "b", "wn", "l", "stu", "hs", "cik", "kqj", "ee", "fr", "ze", "tn", "kxs", "euw", "blv", "r", "qk", "pf", "ywg", "f", "nt", "gu", "zk", "pp", "d", "i", "maq", "qc", "vp", "jys", "w", "ap", "ro", "d", "jq", "rx", "f", "iiy", "tk", "uh", "qtb", "l", "rhm", "ppg", "gla", "ipm", "i", "z", "ys", "r", "p", "fqd", "m", "i", "sa", "ghf", "qh", "kxw", "x", "z", "i", "iv", "h", "b", "cez", "pe", "ge", "hoc", "k", "h", "yac", "ft", "io", "ex", "bk", "f", "rlx", "n", "ll", "ts", "yj", "lfm", "t", "wa", "bm", "cq", "hbb", "i", "ec", "pnw", "rfk", "vem", "d", "jqy", "z", "w", "i", "h", "f", "jks", "uq", "euo", "tjo", "r", "o", "ct", "sac", "am", "z", "y", "nbb", "n", "r", "b", "no", "hdh", "f", "ogo", "nx", "g", "q", "ehh", "by", "h", "kuc", "pl", "o", "r", "i", "lcp", "et", "hpe", "yi", "ohv", "gc", "dgt", "x", "c", "e", "kwo", "gop", "yf", "as", "n", "ku", "i", "kk", "vk", "k", "pkm", "gyr", "gvf", "xsu", "o", "i", "qxd", "zm", "b", "mv", "gh", "wwj", "uxy", "of", "lfw", "eh", "u", "gk", "r", "yu", "or", "a", "bb", "uq", "ze", "fkv", "yf", "eui", "iz", "xla", "nap", "gy", "rg", "km", "u", "e", "sxa", "dto", "dwt", "nsn", "up", "cz", "u", "r", "ya", "m", "t", "mx", "t", "w", "cm", "q", "yf", "e", "tvx", "kk", "w", "hdh", "qgz", "qud", "qi", "su", "p", "gr", "rj", "pkg", "f", "p", "vu", "fey", "h", "n", "jyl", "em", "ven", "e", "k", "kt", "i", "krd", "w", "jet", "eu", "xu", "sxv", "s", "ood", "eyu", "h", "pwg", "paa", "mf", "h", "qbl", "fw", "krr", "qx", "mca", "lm", "sed", "bmq", "g", "p", "e", "lbn", "kx", "li", "bpx", "ul", "da", "wfb", "qwp", "ros", "ipk", "u", "hh", "t", "r", "ytd", "lu", "k", "yc", "ibm", "sq", "nwb", "mxi", "zbn", "jfc", "xp", "f", "o", "b", "pp", "z", "j", "bq", "qpp", "l", "p", "ctp", "pe", "tm", "kpz", "gm", "xt", "t", "m", "lw", "uvo", "t", "rf", "pqm", "hq", "mfq", "g", "q", "m", "hpb", "jcw", "zwo", "u", "t", "bdq", "nk", "ua", "y", "msu", "b", "g", "ze", "ijv", "q", "dj", "nn", "rnx", "st", "u", "ls", "jfs", "mpz", "w", "wsu", "g", "ae", "e", "yoh", "ye", "nv", "d", "wng", "yxd", "bw", "sqy", "a", "k", "ilo", "bds", "e", "t", "uun", "ue", "zdi", "b", "ul", "ou", "e", "z", "a", "cll", "om", "x", "b", "ajp", "vjc", "epa", "dpx", "bl", "tt", "nj", "c", "seg", "oz", "jj", "qg", "xz", "iq", "jo", "a", "m", "gfd", "bdj", "ztq", "vmb", "wd", "dlb", "xl", "ckt", "ks", "hp", "s", "j", "jyq", "x", "zlc", "l", "u", "q", "p", "apl", "ci", "k", "p", "ut", "dz", "x", "u", "r", "bs", "tu", "c", "t", "xo", "r", "n", "xlb", "u", "fi", "az", "c", "pi", "fz", "v", "kin", "d", "zb", "k", "x", "px", "u", "in", "f", "zav", "ey", "okl", "i", "r", "qv", "aac", "m", "eb", "cy", "pyd", "n", "m", "pmh", "hx", "zn", "vck", "cif", "g", "l", "cpg", "t", "a", "czb", "j", "i", "x", "f", "yk", "he", "s", "zg", "gz", "ckl", "zmk", "kj", "v", "kn", "uzq", "qj", "v", "t", "rf", "npj", "dm", "qn", "jav", "i", "q", "g", "udw", "z", "qsj", "c", "x", "cnp", "e", "vxh", "gw", "mk", "rau", "mnh", "xyi", "i", "h", "t", "src", "o", "z", "jm", "pn", "i", "lw", "wd", "x", "l", "cmw", "s", "d", "id", "ux", "p", "d", "p", "mjk", "kr", "jt", "u", "rss", "zim", "fi", "il", "e", "w", "dfd", "fby", "ui", "kq", "yjt", "uzh", "vby", "pv", "o", "g", "u", "k", "rw", "jyx", "xr", "wyh", "dq", "qrb", "e", "nl", "di", "l", "gwj", "zz", "cvh", "iah", "yif", "xtm", "wf", "iix", "o", "j", "kf", "lbz", "hq", "xp", "q", "ku", "uc", "ojp", "mym", "hft", "vrb", "bwu", "d", "tz", "m", "mhs", "vl", "n", "h", "nd", "kdl", "h", "gp", "pff", "ry", "ap", "puf", "lk", "s", "hh", "om", "x", "z", "pjy", "ye", "cah", "lwz", "rjx", "n", "cue", "jww", "o", "wu", "eh", "yci", "h", "gi", "bh", "al", "sms", "bca", "ye", "t", "ift", "y", "l", "is", "gdq", "s", "nx", "ch", "qy", "hl", "nfy", "zsm", "yy", "ecq", "sv", "re", "k", "fsn", "nre", "eu", "zf", "rq", "hqw", "jzh", "u", "kc", "si", "ilq", "ih", "iau", "v", "p", "gzm", "yx", "uef", "rq", "xap", "hve", "slp", "h", "s", "znc", "ua", "xp", "sr", "ty", "q", "va", "e", "w", "fzi", "v", "p", "rts", "ye", "vwl", "xf", "x", "s", "l", "xu", "jv", "dp", "gjl", "g", "g", "gom", "e", "nl", "aae", "ebd", "e", "fx", "w", "n", "w", "va", "h", "t", "g", "i", "f", "dpe", "p", "v", "m", "cx", "vgo", "d", "qq", "njn", "fr", "vuq", "rmv", "zk", "m"};
        System.out.println(new FindClosestLcci().findClosest(words, "hkn", "ae"));
    }

    public int findClosest(String[] words, String word1, String word2) {
        int len = words.length;
        int l = -1, r = -1, ans = len;
        for (int i = 0; i < len; i++) {
            if (word1.equals(words[i])) {
                l = i;
                if (r > 0) {
                    ans = Math.min(ans, Math.abs(l - r));
                }
            } else if (word2.equals(words[i])) {
                r = i;
                if (l > 0) {
                    ans = Math.min(ans, Math.abs(l - r));
                }
            }
        }
        return ans;
    }
}
